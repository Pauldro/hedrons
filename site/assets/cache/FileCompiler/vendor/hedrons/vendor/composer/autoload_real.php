<?php

// autoload_real.php @generated by Composer

class ComposerAutoloaderInitf05a4f7cf50f7b200247cf2fc06debc2
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
 require(\ProcessWire\wire('files')->compile(\ProcessWire\wire("config")->paths->root . 'vendor/hedrons/vendor/composer' . '/ClassLoader.php',array('includes'=>true,'namespace'=>true,'modules'=>true,'skipIfNamespace'=>true)));
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

        spl_autoload_register(array('ComposerAutoloaderInitf05a4f7cf50f7b200247cf2fc06debc2', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitf05a4f7cf50f7b200247cf2fc06debc2', 'loadClassLoader'));

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
        if ($useStaticLoader) {
 require_once(\ProcessWire\wire('files')->compile(\ProcessWire\wire("config")->paths->root . 'vendor/hedrons/vendor/composer' . '/autoload_static.php',array('includes'=>true,'namespace'=>true,'modules'=>true,'skipIfNamespace'=>true)));

            call_user_func(\Composer\Autoload\ComposerStaticInitf05a4f7cf50f7b200247cf2fc06debc2::getInitializer($loader));
        } else {
            $map = require(\ProcessWire\wire('files')->compile(\ProcessWire\wire("config")->paths->root . 'vendor/hedrons/vendor/composer' . '/autoload_namespaces.php',array('includes'=>true,'namespace'=>true,'modules'=>true,'skipIfNamespace'=>true)));
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require(\ProcessWire\wire('files')->compile(\ProcessWire\wire("config")->paths->root . 'vendor/hedrons/vendor/composer' . '/autoload_psr4.php',array('includes'=>true,'namespace'=>true,'modules'=>true,'skipIfNamespace'=>true)));
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require(\ProcessWire\wire('files')->compile(\ProcessWire\wire("config")->paths->root . 'vendor/hedrons/vendor/composer' . '/autoload_classmap.php',array('includes'=>true,'namespace'=>true,'modules'=>true,'skipIfNamespace'=>true)));
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        return $loader;
    }
}
